#!/bin/bash

dmenufont='Hack-9'
dmenunb='#1c2023'
dmenunf='#f3f4f5'
dmenusb='#c795ae'
dmenusf='#1c2023'

nm-openvpn-up () { \
	connection=$(nmcli connection show | grep -i vpn | awk -F' ' '{print $1}' | dmenu -i -p 'VPN:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	state=$(nmcli con up $connection)
	#if [ -n $(echo "state" | grep success ] 
	notify-send "dmenu-nm" "VPN connected to $connection"
}

nm-openvpn-down () { \
	connection=$(nmcli | grep 'VPN connection' | sed 's/\sVPN\sconnection//g' | dmenu -i -p 'VPN:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	nmcli con down $connection
}

nm-openvpn-resolve () { \
	chosen=$(echo -e 'Up\nDown' | dmenu -i -p 'Manage VPN:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	# Write a case statement to call 

	case $chosen in
		Up) nm-vpn-up;;
		Down) nm-vpn-down;;
		*) notify-send -u critical "dmenu-nm" "Could not resolve management string for VPN";;
	esac
}

nm-wireguard-up () { \
	vpn=$(ls /etc/wireguard/ | sed 's/\.conf//g' | dmenu -i -p 'VPN:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	valid=$(ls /etc/wireguard/ | grep $vpn)

	[ -z "$vpn" ] && notify-send -u critical "dmenu-nm" "No VPN chosen" && exit 1

	[ -z "$valid" ] && notify-send -u critical "dmenu-nm" "Invalid VPN chosen" && exit 1

	sudo -A wg-quick up $vpn && notify-send "dmenu-nm" " Connected to $vpn"
}

nm-wireguard-down () { \
	# note: this will not work well if your vpn files have spaces in the names
	vpn=$(wg show interfaces | tr ' ' '\n' | dmenu -i -p 'VPN:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	valid=$(wg show interfaces | grep $vpn)

	[ -z "$vpn" ] && notify-send -u critical "dmenu-nm" "No VPN chosen" && exit 1

	[ -z "$valid" ] && notify-send -u critical "dmenu-nm" "Invalid VPN Chosen" && exit 1

	sudo -A wg-quick down $vpn && notify-send "dmenu-nm" "Disconnected from $vpn"
}

nm-wireguard-resolve () { \
	chosen=$(echo -e 'Up\nDown' | dmenu -i -p 'Type to Manage:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	case $chosen in
		Up) nm-wireguard-up;;
		Down) nm-wireguard-down;;
		*) notify-send -u critical "dmenu-nm" "Could not resolve management string for WireGuard"
	esac
}

nm-device-resolve () { \
	act=$(echo -e 'connect\ndelete\ndisconnect' | dmenu -i -p 'Device Operation:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	[ -z "$act" ] && notify-send -u critical "dmenu-nm" "No device operation specified" && exit 1

	chosen=$(nmcli device | tail -n +2 | awk '{print $1}' | dmenu -i -p 'Device:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	[ -z "$chosen" ] && notify-send -u critical "dmenu-nm" "No device specified" && exit 1

	output=$(nmcli device $act "$chosen")
	[ -z "$(echo $output | grep -iv error)" ] && notify-send -u critical "dmenu-nm" "Device error:\n$output" && exit 1
	notify-send "dmenu-nm" "Device $act $chosen"
}

nm-connection-resolve () { \
	act=$(echo -e 'Up\nDown' | dmenu -i -p 'Connection Operation:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf | sed 's/Up/up/g; s/Down/down/g')
	[ -z "$act" ] && notify-send -u critical "dmenu-nm" "No connection operation specified" && exit 1

	chosen=$(nmcli connection | grep -iv vpn | tail -n +2 | awk -F'  ' '{print $1}' | dmenu -i -p 'Connection:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	[ -z "$chosen" ] && notify-send -u critical "dmenu-nm" "No connection specified" && exit 1

	output=$(nmcli connection $act "$chosen")
	[ -z "$(echo $output | grep -iv error)" ] && notify-send -u critical "dmenu-nm" "Connection error:\n$output" && exit 1
	notify-send "dmenu-nm" "Connection $act $chosen"
}

chosen=$(echo -e 'Device\nConnection\nVPN\nBluetooth' | dmenu -i -p 'Type to Manage:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

case $chosen in
	Device) nm-device-resolve;;
	Connection) nm-connection-resolve;;
	VPN) nm-wireguard-resolve;;
	Bluetooth) nm-bt-resolve;;
	*) notify-send -u critical "dmenu-nm" "Could not resolve management string"
esac
