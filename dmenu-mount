#!/bin/bash
# Parts derived from some of Luke Smith's dmenu scripts

dmenufont='Hack-9'
dmenunb='#1c2023'
dmenunf='#f3f4f5'
dmenusb='#95c7ae'
dmenusf='#1c2023'

getmount() { \
	[ -z "$chosen" ] && exit 1
	mp="$(find $1 2>/dev/null | dmenu -i -p "Type in mount point:" -fn $dmenufont -l 10 -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)"
	[ "$mp" = "" ] && notify-send "dmenu-mount" "Mount point null" && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?" -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
	fi
}

drive-mount () { \
	chosen="$(echo "$usbdevices" | dmenu -i -p "Mount which drive?" -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf | awk '{print $1}')"
	[ -z "$chosen" ] && notify-send "dmenu-mount" "No device selected" && exit;
	sudo -A mount "$chosen" 2>/dev/null && notify-send -u Low "dmenu-mount" "$chosen mounted." && exit 0
	alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$2=="part"&&$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not \\( -path *%s -prune \\) \\ \n",$3}')
	getmount "/mnt /media /mount /home -maxdepth 5 -type d $alreadymounted"
	partitiontype="$(lsblk -no "fstype" "$chosen")"
	case "$partitiontype" in
		vfat) sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
		*) sudo -A mount -o umask=0077,uid=$(id -u $(whoami)),gid=$(id -g $(whoami)) "$chosen" "$mp";;
 		#*) sudo -A mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" "$mp";;
	esac
	notify-send -u Low "dmenu-mount" "Drive $chosen:\n$chosen mounted to $mp."
}

drive-umount () { \
	mount_point=$(lsblk -rpo "name,type,mountpoint" | grep -iv "/dev/sda" | awk '$2=="part"&&$3!=""{print $3}' | dmenu -i -p "Unmount:" -l 10 -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)

	[ -z "$mount_point" ] && notify-send "dmenu-mount" "No mountpoint selected" && exit;
	
	if [ "$mount_point" = "/" -o "$mount_point" = "/home" -o "$mount_point" = "/boot/efi" -o "$mount_point" = "[SWAP]" ]
	then
		notify-send -u Critical "dmenu-mount" "$mount_point is dangerous to unmount" && exit
	fi
	
	o=$(sudo -A umount $mount_point 2>&1)
	sync
	
	if [ -z "$(echo $o | grep -v unmounted)" ]
	then
		notify-send -u Low "dmenu-mount" "Drive $mount_point:\nunmounted successfully"
	else
		notify-send -u Critical "dmenu-mount" "Drive $mount_point:\nunmount failed\nREASON: $o"
	fi

	exit
}

android-mount () { \
	chosen=$(echo "$anddevices" | dmenu -i -p "Which Android device?" -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf | cut -d : -f 1)
	[ -z "$chosen" ] && notify-send "dmenu-mount" "No Android device selected" && exit;
	getmount "$HOME -maxdepth 3 -type d"
	simple-mtpfs --device "$chosen" "$mp"
	notify-send -u Low "dmenu-mount" "Android $chosen:\nAndroid device mounted to $mp."
}

android-umount () { \
	chosen=$(awk '/simple-mtpfs/ {print $2}' /etc/mtab | dmenu -i -p "Unmount which device?" -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	[ -z "$chosen" ] && notify-send "dmenu-mount" "No mountpoint selected" && exit;
	sudo -A umount -l "$chosen" && notify-send -u Low "dmenu-mount" "Android $chosen:\n$chosen unmounted."
}

encrypted-mount () { \
	notify-send -u Critical "dmenu-mount" "Encryted Mounting not supported yet"
}

encrypted-umount () { \
	notify-send -u Critical "dmenu-mount" "Encrypted Unmounting not supported yet"
}

drive-specify () { \
	mode=$(echo -e 'Mount\nUnmount' | dmenu -i -p 'Drive Options:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	
	case $mode in
		Mount) drive-mount;;
		Unmount) drive-umount;;
		*) notify-send "dmenu-mount" "Mounting option for Drive not specified";;
	esac
}

android-specify () { \
	mode=$(echo -e 'Mount\nUnmount' | dmenu -i -p 'Android Options:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	
	case $mode in
		Mount) android-mount;;
		Unmount) android-umount;;
		*) notify-send "dmenu-mount" "Mounting option for Android not specified";;
	esac
}

encrypted-specify () { \
	mode=$(echo -e 'Mount\nUnmount' | dmenu -i -p 'Encrypted Drive Options:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)
	
	case $mode in
		Mount) encrypted-mount;;
		Unmount) encrypted-umount;;
		*) notify-send "dmenu-mount" "Mounting option for Encrypted Drive not specified";;
	esac
}

usbdevices="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n", $1, $3}')"
anddevices=$(simple-mtpfs -l 2>/dev/null)

#if [ -z "$usbdevices" ] && [ -z "$anddevices" ]
#then
#	notify-send "dmenu-mount" "No mountable devices"
#	exit
#elif [ -z "$anddevices" ]
#then
#	drive-specify
#elif [ -z "$usbdevices" ]
#then
#	android-specify
#else
	
	mode="$(echo -e 'Drive\nAndroid\nEncrypted' | dmenu -i -p 'Drive type:' -fn $dmenufont -nb $dmenunb -nf $dmenunf -sb $dmenusb -sf $dmenusf)"
	
	case $mode in
		Drive) drive-specify;;
		Android) android-specify;;
		Encrypted) encrypted-specify;;
		*) notify-send "dmenu-mount" "Drive type not specified";;
	esac
	
#fi
